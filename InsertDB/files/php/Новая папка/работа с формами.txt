<div class="title">Работа с формами</div>
<div class="text">
В этом примере показано, как в PHP легко обрабатывать данные, полученные от HTML–форм. Для понимания
этой главы от вас требуются крепкие знания языка HTML и принципа работы HTML-форм и а также понимания
разницы двух методов передачи данных в них (GET И POST).
Чаще всего серверные скрипты используются для обработки результатов заполнения форм. Например, в
гостевой книге посетитель вводит данные в форму, которая затем обрабатывается на сервере. Отвечая на какой-
либо опрос пользователь, аналогично, устанавливает значение определенных полей формы.
Напомню, какие тэги и атрибуты должна содержать форма:
</div>
<div class="syntax">
&#60;FORM NAME="имя_формы"
<br>ACTION="путь_к_обработчику"
<br>METHOD="метод_передачи_переменных"&#62;
<br>поля ввода...
<br>&#60;/FORM&#62;
</div>
<div class="text">
Цветом выделены те элементы, которые пригодятся нам в этом опыте. Прежде всего разберемся, что такое
"обработчик". Это скрипт на сервере, в который будут переданы значения полей ввода.
Каждое поле ввода имеет атрибут NAME, которое будет передано в обработчик вместе со своим значением.
Существует два метода передачи данных: GET и POST. Их отличие состоит в том, что при использовании
метода GET значения полей присоединяются к URL, указанному в атрибуте ACTION. Происходит это таким
образом:
http://site.domain/action.php3?имя=значение&...имя=значение
Пары "имя=значение" создаются для каждого элемента ввода, для которого указано имя атрибутом NAME.
В случае использования метода POST значения полей передаются в заголовке запроса к серверу. Формат
передачи при этом методе нам, в общем-то, не интересен. Просто примем к сведению, что значения передаются
"незаметно" для обычного пользователя.
При исполнении скрипта на языке PHP создаются переменные с именами, соответствующими именам полей и
содержащие соответствующие значения.
Предположим, что мы создали форму следующего вида:
</div>
<div class="syntax">
&#60;FORM ACTION="mult.php3" METHOD="GET"&#62;
<br>&#60;INPUT TYPE="text" NAME="first" SIZE="4" MAXLENGTH="4"&#62;
<br>&#60;INPUT TYPE="text" NAME="second" SIZE="4" MAXLENGTH="4"&#62;
<br>&#60;INPUT TYPE="Submit" VALUE="Умножить"&#62;
<br>&#60;/FORM&#62;
</div>
<div class="text">Скрипт, содержащийся в файле mult.php3 может выглядеть следующим образом:</div>
<div class="syntax">
&#60;?php
<br>Header("Content-type: text/html");
<br>echo "$first умножить на $second получится ", $first*$second;
<br>?&#62;
</div>
<div class="text">
Как видим, все довольно просто.
Необходимо напомнить, что существует специальный тип поля HIDDEN. Это поле, которое не выводится на
экран, но, если ему присвоено имя атрибутом NAME, значение его передается в форму. Это бывает полезно,
например, когда один обработчик может производить не одно, а несколько действий. С помощью такого поля
мы можем задать тип действия, которое мы хотим произвести с данными формы.
</div>