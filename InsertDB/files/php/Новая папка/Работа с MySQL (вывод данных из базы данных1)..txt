<div class="title">Работа с MySQL.Вывод</div>
<div class="text">Взгляните на следующий код:</div>
<div class="syntax">
&#60;html&#62;
<br>&#60;body&#62;
<br>&#60;?php
<br>$db = mysql_connect("localhost", "root");
<br>mysql_select_db("mydb",$db);
<br>$result = mysql_query("SELECT * FROM employees",$db);
<br>i&#60;br&#62;f ($myrow = mysql_fetch_array($result))
<br>{
<br>echo "&#60;table border=1&#62;\n";
<br>echo "&#60;tr&#62;&#60;td&#62;Name&#60;/td&#62;&#60;td&#62;Position&#60;/td&#62;&#60;/tr&#62;\n";
<br>do
<br>{
<br>printf("&#60;tr&#62;&#60;td&#62;%s %s&#60;/td&#62;&#60;td&#62;%s&#60;/tr&#62;\n", $myrow["first"], $myrow["last"],
<br>$myrow["address"]);
<br>}
<br>while ($myrow = mysql_fetch_array($result));
<br>echo "&#60;/table&#62;\n";
<br>}
<br>else
<br>{
<br>echo "Sorry, no records were found!";
<br>}
<br>?&#62;
<br>&#60;/body&#62;
<br>&#60;/html&#62;
</div>
<div class="text">
В данном коде мы опять ввели некоторые новые понятия, но они достаточно просты. Во-первых, вместо
функции <b>mysql_fetch_row()</b> мы использовали функцию <b>mysql_fetch_array().</b> Она работает точно так же, как и
<b>mysql_fetch_row()</b> за одним замечательным исключением: с помощью этой функции мы можем обращаться к
каждому полю массива не по номеру, а по имени. Например, если раньше для получения имени нам
приходилось писать $myrow[1] (1 – второй столбец массива), то теперь мы можем писать $myrow["first"] ("first"
– название столбца в базе данных и в массиве). Второй вариант естественно гораздо информативнее и удобнее.
Кроме этого, в коде использован цикл do/while и условная конструкция if-else.
Выражение if-else говорит, что если мы можем присвоить значение $myrow, то надо начать выборку, в
противном случае мы понимаем, что записей нет, переходим к блоку else и выводим соответствующее
сообщение. Чтобы проверить, как работает эта часть кода, замените SQL-выражение на "SELECT * FROM
employees WHERE id=6" или на какое-нибудь другое, которое не даст результата.
Цикл do/while – это всего лишь вариант цикла while(), который мы использовали в предыдущем примере. Мы
обратились за помощью к циклу do/while по одной простой причине. В конструкции if мы уже сделали выборку
первого ряда и присвоили его переменной $myrow. Если бы мы сейчас воспользовались прежней конструкцией
(т.е. while ($myrow = mysql_fetch_row($result)), мы бы затерли значения первой выбранной записи, заменив ее
значениями второй записи. В случае же с циклом do/while мы проверяем условие после того, как код цикла
выполнится по крайней мере один раз. Таким образом, ни одна запись не ускользнет из наших рук.
А сейчас давайте сделаем код в цикле и if-else конструкцию еще более красивым. Уверен, результат вам
понравится.
</div>