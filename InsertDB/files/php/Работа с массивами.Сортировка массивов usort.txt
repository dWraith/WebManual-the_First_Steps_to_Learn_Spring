<div class="title">usort</div>
                <h1>Описание:</h1>
                <div class="text">
    Пользоваетльская сортировка значений массива.  
                </div>
                 <h1>Синтаксис:</h1>
                <div class="syntax">
   	bool usort(array arr, callback cmp_function).
		</div>
		<div class="text">
        Функция usort() сортирует массив arr без сохраненя индексных ассоциаций, используя для сравнения значений пользовательскую функцию, указанную в аргументе cmp_function. В эту функцию передаются два сравниваемых индекса элементов, а она должна вернуть положительное или отрицательное число или 0. 
Эта функция как бы является "гибридом" функций uasort() и sort(). От sort() она отличается тем, что критерий сравнения обеспечивается пользовательской функцией. А от uasort() - тем, что она не сохраняет связей между ключами и значениями, а потому пригодна разве что для сортировки списков. 
<h1>Пример использования функции usort(): </h1>
                </div>
		<div class="syntax">
   	<?php
<br>function cmp($a, $b) { 
 <br>  if ($a == $b) {       
 <br>return 0;   
<br> }   
<br> return ($a < $b) ? -1 : 1;
<br>}
<br>$a = array(3, 2, 5, 6, 1);
<br>usort($a, "cmp");
<br>while (list($key, $value) = each($a)) { 
<br>   echo "$key: $valuen";
<br>}
<br>?>
                </div>
		<div class="text">
    Пример одномерного массива:  
                </div>
		<div class="syntax">
   	function cmp($a, $b) {  
<br>if($a==$b) return 0; 
<br> return ($a > $b) ? -1 : 1;
<br>}
<br>$a=array (3,2,5,6,1);
<br>usort($a, "cmp");
<br>while(list($key,$val)=each($a)) {
 <br> echo "$key: $valn";
<br>}
                </div>
		<div class="text">
          При выполнении будет напечатано: 
                </div>
		<div class="syntax">
   	0: 6
<br>1: 5
<br>2: 3
<br>3: 2
<br>4: 1
                </div>