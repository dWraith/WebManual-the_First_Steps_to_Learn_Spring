<div class="title">function</div>
                <h1>Описание:</h1>
                <div class="text">
     Объявление функции. 
Внутри функции может быть любой верный код PHP, даже объявление другой функции или класса. Функции должны быть объявлены перед тем, как на них ссылаться. 
                </div>
                <h1>Синтаксис:</h1>
                <div class="syntax">
     <?php
<br>function foo ($arg_1, $arg_2, ..., $arg_n) { 
<br>echo "Пример функции.";  return $retvalue;
<br>}
<br>?>
                </div>
	  <h1>Возвращение результатов:</h1>
                <table>
                    <tr>
                        <td>
                            Результаты возвращаются через необязательный оператор return. 
                        </td>
                    </tr>
	  <tr>
                        <td>
                            Возвращаемый результат может быть любого типа, включая списки и объекты. 
                        </td>
                    </tr>
                </table>
 	<div class="syntax">
     <?php
<br>function my_sqrt ($num) { 
<br>return $num * $num;
<br>}
<br>echo my_sqrt(4);  //выведет 16
<br>?>
                </div>
	<div class="text">
     Множественные результаты не могут быть возвращены в качестве результата, но вы можете реализовать это путем возврата списка: 
                </div>
	<div class="syntax">
    function foo() { 
<br>return array (0, 1, 2);
<br>}
<br>list ($zero, $one, $two) = foo();
                </div>
	<div class="text">
	<b>Аргументы:</b>
     Множественные результаты не могут быть возвращены в качестве результата, но вы можете реализовать это путем возврата списка: 
                </div>
	<div class="syntax">
   function takes_array($input) {  
<br>echo "$input[0] + $input[1] = ", $input[0]+$input[1];
<br>}
                </div>
	<div class="text">
<b>Передача по ссылке:</b>
     По умолчанию, аргументы функции передаются по значению. Для изменения аргументов в функции их надо передавать по ссылке. Для этого надо поставить амперсанд (&) перед именем аргумента в объявлении функции: 
                </div>
	<div class="syntax">
   function foo( &$bar) {  
<br>$bar .= "и добавочная строка.";
<br>}
<br>$str = "Это строка, ";
<br>foo($str);
<br>echo $str; // выведет : "Это строка, и добавочная строка."
<br>function foo($bar) {  
<br>$bar .= "и добавочная строка.";
<br>}
<br>$str = "Это строка, ";
<br>foo($str);
<br>echo $str;  //выведет : "Это строка, "
<br>foo(&$str);
<br>echo $str;  //выведет : "Это строка, и добавочная строка."
                </div>
	<div class="text">
<b>Значения по умолчанию:</b>
     Значение по умолчанию должно быть константой, а не переменной или членом класса. 
                </div>
	<div class="syntax">
    function day ($type = "понедельник") {  
<br>echo "Сегодня $type.";
<br>}
<br>echo day();           //выведет : Сегодня понедельник.
<br>echo day("вторник");  //выведет : Сегодня вторник.
<br>function day($day_num, $type = "понедельник") {  
<br>return "Сегодня $day_num - $type.";
<br>}
	</div>

