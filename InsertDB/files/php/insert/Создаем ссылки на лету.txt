<div class="title">Создаем ссылки на лету</div>
<div class="text">Сейчас мы поработаем со параметрами запроса. Как вы уже наверняка знаете, существует три способа передачи
параметров запроса. Первый, использовать метод GET в форме (с ним мы разобрались в главе "Работа с
формами"). Второй – набрать параметры прямо в адресной строке броузера. И третий, это вставить параметры в
обычную ссылку на странице. То есть сделать ссылку примерно такого вида</div>
<div class="syntax">
&#60;a href="http://my_machine/mypage.php3?id=1"&#62;
</div>
<div class="text">Сейчас мы научимся создавать такие ссылки на лету.
Для начала, давайте обратимся к базе данных и выведем список персонала. Взгляните на следующий код.
Многое в нем вам будет знакомо.</div>
<div class="syntax">
&#60;html&#62;
<br>&#60;body&#62;
<br>&#60;?php
<br>$db = mysql_connect("localhost", "root");
<br>mysql_select_db("mydb",$db);
<br>$result = mysql_query("SELECT * FROM employees",$db);
<br>if ($myrow = mysql_fetch_array($result))
<br>{
<br>do
<br>{
<br>printf("&#60;a href=\"%s?id=%s\"&#62;%s %s&#60;/a&#62;&#60;br&#62;\n", $PHP_SELF, $myrow["id"],$myrow["first"],
<br>$myrow["last"]);
<br>}
<br>while ($myrow = mysql_fetch_array($result));
<br>}
<br>{
<br>echo "Sorry, no records were found!";
<br>}
<br>?&#62;
&#60;/body&#62;
&#60;/html&#62;
</div>
<div class="text">Все вам должно быть знакомо, кроме функции <b>printf()</b>. Поэтому, давайте рассмотрим ее поближе. Во-первых,
обратите внимание на обратные косые черты. Они говорят PHP-движку, что необходимо вывести символ,
следующий за чертой, а не рассматривать его, как служебный символ или как часть кода. В данном случае это
касается кавычки, которая нам нужна в тексте ссылки, но для PHP является символом окончания текстовой
строки.
Далее, в коде используется интересная переменная $PHP_SELF. В этой переменной всегда хранится имя и URL
текущей страницы. В данном случае эта переменная важна для нас потому, что мы хотим через ссылку вызвать
страницу из нее самой. То есть вместо того, чтобы делать две страницы, содержащие разные коды для разных
действий, мы все действия запихнули в одну страницу. С помощью условий if-else мы будем переводить
стрелки с одного кода на другой, гоняя одну и ту же страницу по кругу. Это конечно увеличит размер страницы
и время, необходимое на ее обработку, но в некоторых случая, такой трюк очень удобен.
Переменная $PHP_SELF гарантирует нам, что наша страница будет работать даже в том случае, если мы
перенесем ее в другой каталог или даже на другую машину.
Как мы уже сказали, ссылки, сгенерированные в цикле ссылаются на ту же самую страницу, только к имени
самой страницы на лету добавлена некоторая информация: переменные и их значения. Переменные, которые
передаются в строке-ссылке, автоматически создаются PHP-движком, и к ним можно обращаться так, как если
бы вы их создавали в коде сами. При втором проходе страницы наша программа отреагирует на эти пары
name=value и направит ход исполнения на другие рельсы. В данном случае мы проверим, есть ли переменная
$id, и в зависимости от результата выполним тот или иной код. Вот как это будет выглядеть:</div>
<div class="syntax">
&#60;html&#62;
&#60;body&#62;
&#60;?php
<br>$db = mysql_connect("localhost", "root");
<br>mysql_select_db("mydb",$db);
<br>// display individual record
<br>if ($id)
<br>{
<br>$result = mysql_query("SELECT * FROM employees WHERE id=$id",$db);
<br>$myrow = mysql_fetch_array($result);
<br>printf("First name: %s\n&#60;&#62;br&#62;", $myrow["first"]);
<br>printf("Last name: %s\n&#60;br&#62;", $myrow["last"]);
<br>printf("Address: %s\n&#60;br&#62;", $myrow["address"]);
<br>printf("Position: %s\n&#60;br&#62;", $myrow["position"]);
<br>}
<br>else
<br>{
<br>// show employee list
<br>$result = mysql_query("SELECT * FROM employees",$db);
<br>if ($myrow = mysql_fetch_array($result))
<br>{
<br>do
<br>{
<br>printf("&#60;a href=\"%s?id=%s\"&#62;%s %s&#60;/a&#62;&#60;br&#62;\n", $PHP_SELF, $myrow["id"],
<br>$myrow["first"], $myrow["last"]);
<br>}
<br>while ($myrow = mysql_fetch_array($result));
<br>}
<br>else
<br>{
<br>// no records to display
<br>echo "Sorry, no records were found!";
<br>}
<br>// display list if there are records to display
<br>}
?&#62;
<br>&#60;/body&#62;
<br>&#60;/html&#62;
</div>
<div class="text">Код усложнился, поэтому мы добавили в него некоторые комментарии, чтобы он стал яснее. Для однострочных
комментариев можно использовать символы //. Если комментарий нужно уместить на нескольких строчках,
используйте скобки /* … */.
Итак, магия закончилась, вы наконец создали действительно полезную PHP-страницу, работающую с MySQL.
Теперь давайте научимся добавлять данные с помощью форм.</div>