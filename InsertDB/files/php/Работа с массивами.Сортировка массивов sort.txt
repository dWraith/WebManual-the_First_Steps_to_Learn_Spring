<div class="title">sort</div>
                <h1>Описание:</h1>
                <div class="text">
      Сортировка массива по возрастанию.
                </div>
                 <h1>Синтаксис:</h1>
                <div class="syntax">
   	bool sort(array arr [, int sort_flags])
                </div>
		<div class="text">
      Функция sort() предназначена для сортировки массивов в порядке возрастания. 
Замечание: Эта функция изменяет ключи у отсортированных значений. Т.е. любой ассоциативный массив воспринимается этой функцией как список. После упорядочивания последовательность ключей превращается в 0,1,2,..., а значения нужным образом перераспределяются. Как видим, связи между параметрами ключ=>значение не сохраняются, более того - ключи просто пропадают, поэтому сортировать что-либо, отличное от списка, вряд ли целесообразно. 
<h1>Пример использования функции sort():</h1> 
                </div>
		<div class="syntax">
	<?php
<br>$fruits = array("lemon", "orange", "banana", "apple");
<br>sort($fruits);
<br>reset($fruits);
<br>while (list($key, $val) = each($fruits)) {  
 <br> echo "fruits[" . $key . "] = " . $val . "n";
<br>}
<br>?>
                </div>
		<div class="text">
    Этот пример выведет:
                </div>
		<div class="syntax">
	fruits[0] = apple
<br>fruits[1] = banana
<br>fruits[2] = lemon
<bR>fruits[3] = orange
                </div>